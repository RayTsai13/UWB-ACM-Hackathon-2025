/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/**
 * Filters row IDs based on whether any of the cell values in the row include
 * the input value as a substring. Boolean cell values are ignored.
 */
const defaultFilterRows = _ref => {
  let {
    rowIds,
    headers,
    cellsById,
    inputValue,
    getCellId
  } = _ref;
  const normalizedInput = inputValue.trim().toLowerCase();
  if (!normalizedInput) return rowIds;
  return rowIds.filter(rowId => headers.some(_ref2 => {
    let {
      key
    } = _ref2;
    const cellId = getCellId(rowId, key);
    const cell = cellsById[cellId];
    if (typeof cell.value === 'boolean') return false;
    return String(cell.value).toLowerCase().includes(normalizedInput);
  }));
};

exports.defaultFilterRows = defaultFilterRows;
