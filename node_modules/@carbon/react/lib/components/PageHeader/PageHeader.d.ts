/**
 * Copyright IBM Corp. 2025
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import React, { type ComponentType, type FunctionComponent } from 'react';
import { Tabs as BaseTabs } from '../Tabs/Tabs';
/**
 * ----------
 * PageHeader
 * ----------
 */
interface PageHeaderProps {
    children?: React.ReactNode;
    className?: string;
}
declare const PageHeader: React.ForwardRefExoticComponent<PageHeaderProps & React.RefAttributes<HTMLDivElement>>;
/**
 * -----------------------
 * PageHeaderBreadcrumbBar
 * -----------------------
 */
interface PageHeaderBreadcrumbBarProps {
    children?: React.ReactNode;
    className?: string;
}
declare const PageHeaderBreadcrumbBar: React.ForwardRefExoticComponent<PageHeaderBreadcrumbBarProps & React.RefAttributes<HTMLDivElement>>;
/**
 * -----------------
 * PageHeaderContent
 * -----------------
 */
interface PageHeaderContentProps {
    /**
     * Provide child elements to be rendered inside PageHeaderContent.
     */
    children?: React.ReactNode;
    /**
     * Specify an optional className to be added to your PageHeaderContent
     */
    className?: string;
    /**
     * Provide an optional icon to render in front of the PageHeaderContent's title.
     */
    renderIcon?: ComponentType | FunctionComponent;
    /**
     * The PageHeaderContent's title
     */
    title: string;
    /**
     * The PageHeaderContent's subtitle
     */
    subtitle?: string;
    /**
     * The PageHeaderContent's contextual actions
     */
    contextualActions?: React.ReactNode;
    /**
     * The PageHeaderContent's page actions
     */
    pageActions?: React.ReactNode;
}
declare const PageHeaderContent: React.ForwardRefExoticComponent<PageHeaderContentProps & React.RefAttributes<HTMLDivElement>>;
/**
 * ----------------
 * PageHeaderHeroImage
 * ----------------
 */
interface PageHeaderHeroImageProps {
    /**
     * Provide child elements to be rendered inside PageHeaderHeroImage.
     */
    children?: React.ReactNode;
    /**
     * Specify an optional className to be added to your PageHeaderHeroImage
     */
    className?: string;
}
declare const PageHeaderHeroImage: React.ForwardRefExoticComponent<PageHeaderHeroImageProps & React.RefAttributes<HTMLDivElement>>;
/**
 * ----------------
 * PageHeaderTabBar
 * ----------------
 */
interface PageHeaderTabBarProps {
    children?: React.ReactNode;
    className?: string;
}
declare const PageHeaderTabBar: React.ForwardRefExoticComponent<PageHeaderTabBarProps & React.RefAttributes<HTMLDivElement>>;
interface PageHeaderTabsProps extends React.ComponentProps<typeof BaseTabs> {
    children?: React.ReactNode;
    className?: string;
}
declare const PageHeaderTabs: React.ForwardRefExoticComponent<PageHeaderTabsProps & React.RefAttributes<HTMLDivElement>>;
/**
 * -------
 * Exports
 * -------
 */
declare const Root: React.ForwardRefExoticComponent<PageHeaderProps & React.RefAttributes<HTMLDivElement>>;
declare const BreadcrumbBar: React.ForwardRefExoticComponent<PageHeaderBreadcrumbBarProps & React.RefAttributes<HTMLDivElement>>;
declare const Content: React.ForwardRefExoticComponent<PageHeaderContentProps & React.RefAttributes<HTMLDivElement>>;
declare const HeroImage: React.ForwardRefExoticComponent<PageHeaderHeroImageProps & React.RefAttributes<HTMLDivElement>>;
declare const TabBar: React.ForwardRefExoticComponent<PageHeaderTabBarProps & React.RefAttributes<HTMLDivElement>>;
declare const Tabs: React.ForwardRefExoticComponent<PageHeaderTabsProps & React.RefAttributes<HTMLDivElement>>;
export { PageHeader, PageHeaderBreadcrumbBar, PageHeaderContent, PageHeaderHeroImage, PageHeaderTabBar, PageHeaderTabs, Root, BreadcrumbBar, Content, HeroImage, TabBar, Tabs, };
export type { PageHeaderProps, PageHeaderBreadcrumbBarProps, PageHeaderContentProps, PageHeaderHeroImageProps, PageHeaderTabBarProps, PageHeaderTabsProps, };
